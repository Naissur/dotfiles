# Prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} =
	function(${3:first_argument}) {
		${4:// body...}
	};
# Function
snippet fun
	function ${1:function_name} (${2:argument}) {
		${3:// body...}
	}
# Anonymous Function
snippet f
	function(${1}) {${2}};
# if
snippet if
	if (${1:true}) {${2}}
# if ... else
snippet ife
	if (${1:true}) {${2}}
	else{${3}}
# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch(${1:expression}) {
		case '${3:case}':
			${4:// code}
			break;
		${5}
		default:
			${2:// code}
	}
# case
snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}
# for (...) {...}
snippet for
	for (var ${2:i} = 0; $2 < ${1:Things}.length; $2${3:++}) {
		${4:$1[$2]}
	};
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	};
# while (...) {...}
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute}) {
		${4}
	}${3:,}
# setTimeout function
snippet timeout
	setTimeout(function() {${3}}${2}, ${1:10};
# Get Elements
snippet get
	getElementsBy${1:TagName}('${2}')${3}
# Get Element
snippet gett
	getElementBy${1:Id}('${2}')${3}




# CUSTON


snippet rcomp
	<${1:ComponentName}>
		${2}
	</$1>
snippet rcomps
	<${1:ComponentName}
		${2:prop}=${3:value}
	/>
snippet rcompp
	<${1:ComponentName}
		${2:prop}=${3:value}
	>
		${4}
	</$1>
snippet div
	<div>
	</div>
snippet divc
	<div className=${1}>
	</div>
snippet rcompc
	export default class ${1:Item} extends Component {
		render() {
			return (
				<${2:div}>
				</$2>
			);
		}
	}
snippet createClass
	React.createClass({
		render(){
			return (
				<div>
					${1}
				</div>
			)
		}
	});
snippet {
	{
		${1}
	}
snippet log
	console.log(${1})
snippet gencomp
	import React from 'react'
	import PropTypes from 'prop-types'
	import styles from './${1}.scss'

	export default class ${1} extends PureComponent {
		static propTypes = {
		}

		render() {
			return (
				<div>
				</div>
			)
		}
	}
snippet ajax
	$.ajax({
	    url: ${1},
	    method: "${2}",
	    data: ${3},

	    success: response => {
	        ${4}
	    },

	    fail: error => {
		    ${5}
	    }
	});
snippet /*
	/*
		${1}
	*/
snippet header
	// ==================== //
	// =    ${1:header}     = //
	// ==================== //
snippet time
	console.time(${1:name})
	console.timeEnd($1)
snippet imp
	import ${1} from '${2}'
